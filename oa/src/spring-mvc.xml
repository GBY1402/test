<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<context:property-placeholder location="classpath:resources.properties" />

	<!-- 开启controller注解支持 -->
	<!-- 注意事项请参考：http://jinnianshilongnian.iteye.com/blog/1762632 -->
	<context:component-scan base-package="com.lh.it.resource.*.web.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean class="com.lh.it.resource.web.bind.method.CurrentUserMethodArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
	<mvc:default-servlet-handler />
	
	<!-- 静态资源映射 -->
	
	<mvc:resources mapping="/styles/**" location="/WEB-INF/styles/" />
<!-- 	<mvc:resources mapping="/static/**" location="/WEB-INF/static/" /> -->
<!-- 	<mvc:resources mapping="/default/**" location="/default/" /> -->
<!--  	<mvc:resources mapping="/themes/**" location="/WEB-INF/static/dwz/themes/" /> -->
<!-- 	<mvc:resources mapping="/favicon.ico" location="/themes/favicon.ico"/>  -->

	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="1">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 控制器异常处理 -->
	<bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver" />
	<bean class="com.lh.it.resource.web.exception.DefaultExceptionHandler" />
	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="20971520" />
	</bean>                                  

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
			</props>
		</property>
	</bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
	    <property name="messageConverters">  
	        <list>  
	           <!--  //把ByteArray加在Json前面   -->
	            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>  
	            <bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" >  
	                <property name = "supportedMediaTypes">  
	                    <list>  
	                        <value>text/plain;charset=UTF-8</value>  
	                    </list>
	                </property>  
	            </bean>  
	        </list>  
	    </property>  
     </bean>  
	<!-- 系统日志跟踪功能 -->
	<bean id="log4JDBCImpl" class="com.lh.it.resource.security.log.impl.Log4JDBCImpl" >
		<property name="logEntityService" ref="logEntityServiceImpl"/>
		<property name="rootLogLevel" value="ERROR"/>
		<property name="customLogLevel">
           <map>
              <entry key="com.lh.it.resource" value="TRACE" />
           </map>
       </property>
	</bean> 
	 
	<mvc:interceptors>
		<!-- 监控运行时间 -->
		<mvc:interceptor>
			<mvc:mapping path="/management/**" />
			<mvc:mapping path="/login/timeout/success"/>
			<bean class="com.lh.it.resource.security.log.spring.LogInterceptor" >
				<property name="logAPI" ref="log4JDBCImpl"/>
			</bean>
		</mvc:interceptor>		
	</mvc:interceptors>
	 
	<import resource="spring-mvc-shiro.xml" />
</beans>